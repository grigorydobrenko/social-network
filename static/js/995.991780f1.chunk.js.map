{"version":3,"file":"static/js/995.991780f1.chunk.js","mappings":"uKACA,G,QAA8N,qC,sECGvN,SAASA,EAAT,GAA2F,IAApEC,EAAmE,EAAnEA,SAAUC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,kBAAkC,YAE7F,OAAO,+BACH,6BACIC,UAAWC,EACXJ,GAAIA,EACJF,KAAMA,EACNO,YAAaN,EACbE,KAAMA,GACFJ,EAASC,EAAMI,S,0FCZ/B,EAAsM,kCAAtM,EAAuP,8BAAvP,EAAyS,mCAAzS,EAAuV,0BCAvV,EAA2E,yBAA3E,EAAgH,2BAAhH,EAA2Q,6BAA3Q,EAA4T,mCAA5T,EAAgX,gCAAhX,EAAka,iCAAla,EAAid,6BCAjd,EAAgF,8BAAhF,EAAqU,2BAArU,EAA2W,6B,6BCK9VI,EAA4C,SAACC,GACtD,IAAMC,EAAI,mBAAeD,EAAMP,IAC/B,OACI,iBAAKG,UAAWM,EAAhB,WACI,gBAAKC,IAAKC,EAAWC,IAAI,YAAYT,UAAWM,KAChD,SAAC,KAAD,CAASI,GAAIL,EAAML,UAAWM,EAA9B,SAA2CF,EAAMT,WCHhDgB,EAAsC,SAACP,GAChD,OACI,iBAAKJ,UAAWC,EAAhB,WACI,gBAAKM,IAAKC,EAAWC,IAAI,YAAYT,UAAWC,KAChD,iBAAMD,UAAWC,EAAjB,SAAsCG,EAAMQ,c,oBCN3CC,EAAiB,SAACT,GAC3B,OAA6DU,EAAAA,EAAAA,MAAtDpB,EAAP,EAAOA,SAAUqB,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAA/B,EAAsCC,UAAYC,OAMlD,OAAO,kBAAMC,SAAUJ,GAL4B,SAAAK,GAC/ChB,EAAMiB,WAAWD,GACjBJ,OAG2ChB,UAAWC,EAAnD,WAEH,gBAAKD,UAAWC,EAAhB,UACI,SAACR,EAAA,EAAD,CAAcI,GAAG,UACHF,KAAK,UACLC,MAAM,qBACNE,KAAM,EACNJ,SAAUA,EACVK,iBAAkB,CACduB,UAAU,QAIhC,0BACI,mBAAQtB,UAAWC,EAAnB,wBCUZ,EA5B6C,SAACG,GAC1C,IAAOmB,EAA0BnB,EAA1BmB,WAAYF,EAAcjB,EAAdiB,WACfG,EAAcD,EAAWE,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAACxB,EAAD,CAA4BR,KAAMgC,EAAOhC,KAAME,GAAI8B,EAAO9B,IAAzC8B,EAAO9B,OACvE+B,EAAWL,EAAWM,SAASC,MAAM,GAAGJ,KAAI,SAAAd,GAAO,OAAI,SAACD,EAAD,CAA0BC,QAASA,EAAQA,SAA7BA,EAAQf,OAMjF,OAJAkC,EAAAA,EAAAA,YAAU,WACN3B,EAAM4B,QAAQ,aACf,KAGC,iBAAKhC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKuB,KAEL,iBAAKxB,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,iBAAKD,UAAWiC,EAAhB,WACI,gBAAK1B,IAAKC,EAAWC,IAAI,YAAYT,UAAWiC,KAChD,iBAAMjC,UAAWiC,EAAjB,SAAmDV,EAAWM,SAAS,GAAGjB,aAE7EgB,MAEL,SAACf,EAAD,CAAgBQ,WAAYA,W,uCCC5C,GAbyBa,EAAAA,EAAAA,IAA6BC,EAAAA,GAAkBC,EAAAA,EAAAA,KANhD,SAACC,GACrB,MAAO,CACHd,WAAYc,EAAMd,cAIuE,CAACF,WAAAA,EAAAA,EAAYW,QAAAA,EAAAA,KAArFE,CAAgGI","sources":["webpack://samurai-way/./src/common/components/FormTextarea/FormTextarea.module.scss?640e","common/components/FormTextarea/FormTextarea.tsx","webpack://samurai-way/./src/features/Dialogs/Dialogs.module.scss?cfe8","webpack://samurai-way/./src/features/Dialogs/Message/Message.module.scss?4584","webpack://samurai-way/./src/features/Dialogs/DialogItem/DialogItem.module.scss?0cb9","features/Dialogs/DialogItem/DialogItem.tsx","features/Dialogs/Message/Message.tsx","features/Dialogs/Message/AddMessageForm.tsx","features/Dialogs/Dialogs.tsx","features/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormTextarea_smallUserPhoto__opv+K\",\"inputTextareaBasicLayout\":\"FormTextarea_inputTextareaBasicLayout__iuLLm\",\"formTextareaStyles\":\"FormTextarea_formTextareaStyles__M0aZc\",\"styleTextarea\":\"FormTextarea_styleTextarea__v81HR\",\"formInputStyles\":\"FormTextarea_formInputStyles__EQByh\",\"formInput\":\"FormTextarea_formInput__+3e8k\",\"blocksBorder\":\"FormTextarea_blocksBorder__CdW9S\",\"formCheckBox\":\"FormTextarea_formCheckBox__Jf8ad\"};","import React from 'react';\r\nimport styles from './FormTextarea.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormTextarea({register, name, label, id, rows, validationSchema, ...inputProps}) {\r\n\r\n    return <>\r\n        <textarea\r\n            className={styles.styleTextarea}\r\n            id={id}\r\n            name={name}\r\n            placeholder={label}\r\n            rows={rows}\r\n            {...register(name, validationSchema)}\r\n        />\r\n    </>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"Dialogs_smallUserPhoto__glvD1\",\"inputTextareaBasicLayout\":\"Dialogs_inputTextareaBasicLayout__VMi2M\",\"blocksBorder\":\"Dialogs_blocksBorder__T8Z2m\",\"dialogsContainer\":\"Dialogs_dialogsContainer__T1X4D\",\"dialogsItems\":\"Dialogs_dialogsItems__priQP\",\"messagesContainer\":\"Dialogs_messagesContainer__Og1Gr\",\"messages\":\"Dialogs_messages__207dV\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"Message_smallUserPhoto__y8iHg\",\"message\":\"Message_message__c-A2m\",\"userPhoto\":\"Message_userPhoto__LjECu\",\"inputTextareaBasicLayout\":\"Message_inputTextareaBasicLayout__aztJp\",\"blocksBorder\":\"Message_blocksBorder__21rq8\",\"messageText\":\"Message_messageText__q80P3\",\"friendMessageText\":\"Message_friendMessageText__OfRSA\",\"addMessageForm\":\"Message_addMessageForm__QYV1u\",\"messageTextarea\":\"Message_messageTextarea__aKvKK\",\"sendMessage\":\"Message_sendMessage__lP8QF\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"DialogItem_smallUserPhoto__T6kvX\",\"userPhoto\":\"DialogItem_userPhoto__AUT2V\",\"inputTextareaBasicLayout\":\"DialogItem_inputTextareaBasicLayout__Ogize\",\"blocksBorder\":\"DialogItem_blocksBorder__0gRuw\",\"dialogs\":\"DialogItem_dialogs__Fy6st\",\"dialogsItems\":\"DialogItem_dialogsItems__Liqw9\",\"dialog\":\"DialogItem_dialog__SjFIi\",\"nameLink\":\"DialogItem_nameLink__k4k-5\",\"messages\":\"DialogItem_messages__kvHvb\"};","import React from 'react';\r\nimport s from './DialogItem.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogType} from \"../dialogs-reducer\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nexport const DialogItem: React.FC<DialogItemPropsType> = (props) => {\r\n    const path = `/dialogs/${props.id}`\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={userPhoto} alt=\"userPhoto\" className={s.userPhoto}/>\r\n            <NavLink to={path} className={s.nameLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\ntype DialogItemPropsType = DialogType","import React from 'react';\r\nimport styles from './Message.module.scss'\r\n\r\nimport {MessageType} from \"../dialogs-reducer\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\ntype MessagePropsType = MessageType\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            <img src={userPhoto} alt=\"userPhoto\" className={styles.userPhoto}/>\r\n            <span className={styles.messageText}>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport styles from './Message.module.scss'\r\nimport {FormTextarea} from \"../../../common/components/FormTextarea/FormTextarea\";\r\n\r\n\r\nexport const AddMessageForm = (props: AddMessageFormType) => {\r\n    const {register, handleSubmit, reset, formState: {errors}} = useForm<IMessageFormInput>();\r\n    const onSubmit: SubmitHandler<IMessageFormInput> = data => {\r\n        props.addMessage(data)\r\n        reset()\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit(onSubmit)} className={styles.addMessageForm}>\r\n\r\n        <div className={styles.messageTextarea}>\r\n            <FormTextarea id=\"message\"\r\n                          name=\"message\"\r\n                          label=\"Write a message...\"\r\n                          rows={3}\r\n                          register={register}\r\n                          validationSchema={{\r\n                              required: true\r\n                          }}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={styles.sendMessage}>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport type IMessageFormInput = {\r\n    message: string\r\n}\r\n\r\ntype AddMessageFormType = {\r\n    addMessage: (message: IMessageFormInput) => void\r\n}","import React, {useEffect} from 'react';\r\nimport styles from './Dialogs.module.scss'\r\nimport stylesMessage from './Message/Message.module.scss'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {CommonDialogsType} from \"./DialogsContainer\";\r\nimport {AddMessageForm} from \"./Message/AddMessageForm\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\n\r\nconst Dialogs: React.FC<CommonDialogsType> = (props) => {\r\n    const {dialogPage, addMessage} = props\r\n    let DialogItems = dialogPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n    let Messages = dialogPage.messages.slice(1).map(message => <Message key={message.id} message={message.message}/>)\r\n\r\n    useEffect(() => {\r\n        props.setPage('dialogs')\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.dialogsContainer}>\r\n            <div className={styles.dialogsItems}>\r\n                {DialogItems}\r\n            </div>\r\n            <div className={styles.messagesContainer}>\r\n                <div className={styles.messages}>\r\n                    <div className={stylesMessage.message}>\r\n                        <img src={userPhoto} alt=\"userPhoto\" className={stylesMessage.userPhoto}/>\r\n                        <span className={stylesMessage.friendMessageText}>{dialogPage.messages[0].message}</span>\r\n                    </div>\r\n                    {Messages}\r\n                </div>\r\n                <AddMessageForm addMessage={addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport {\r\n    addMessage,\r\n    DialogStateType\r\n} from \"./dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../app/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {IMessageFormInput} from \"./Message/AddMessageForm\";\r\nimport {withAuthRedirect} from \"../../common/hoc/withAuthRedirect\";\r\nimport {AppPage, setPage} from \"../../app/app-reducer\";\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(withAuthRedirect, connect(mapStateToProps, {addMessage, setPage}))(Dialogs)\r\n\r\nexport type mapStateToPropsType = {\r\n    dialogPage: DialogStateType\r\n}\r\n\r\nexport type mapDispatchToPropsType = {\r\n    addMessage: (message: IMessageFormInput) => void\r\n    setPage: (setPage: AppPage) => void\r\n}\r\n\r\nexport type CommonDialogsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nexport default DialogsContainer"],"names":["FormTextarea","register","name","label","id","rows","validationSchema","className","styles","placeholder","DialogItem","props","path","s","src","userPhoto","alt","to","Message","message","AddMessageForm","useForm","handleSubmit","reset","formState","errors","onSubmit","data","addMessage","required","dialogPage","DialogItems","dialogs","map","dialog","Messages","messages","slice","useEffect","setPage","stylesMessage","compose","withAuthRedirect","connect","state","Dialogs"],"sourceRoot":""}