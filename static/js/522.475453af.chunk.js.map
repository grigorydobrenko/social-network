{"version":3,"file":"static/js/522.475453af.chunk.js","mappings":"6JACA,G,QAA8N,qC,SCGvN,SAASA,EAAT,GAA4E,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,iBAE3D,OAAO,+BACH,6BACIC,UAAWC,EACXJ,GAAIA,EACJF,KAAMA,EACNO,YAAaN,EACbE,KAAMA,GACFJ,EAASC,EAAMI,S,sLCZ/B,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAiL,mBAAjL,EAA8M,sBAA9M,EAAkP,0BAAlP,EAAyR,yBAAzR,EAA0T,oBAA1T,EAAuV,qB,6BCgCvV,EA1BwC,SAACI,GAMrC,OACI,+BACI,iBAAKH,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,gBAAKG,IAAKD,EAAME,OAASC,EAAWC,IAAI,SACxC,wBAAKJ,EAAMR,WAEf,gBAAKK,UAAWC,EAAhB,SAAqCE,EAAMK,WAC3C,iBAAKR,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAACQ,EAAA,EAAD,CAAaC,QAAS,WACtB,0BAAOP,EAAMQ,YAEjB,mBAAQX,UAAWC,EAAeW,QAAS,kBAjBhCC,EAiBwDV,EAAMN,QAhBrFM,EAAMW,WAAWD,GADK,IAACA,GAiBX,UAA8E,SAACJ,EAAA,EAAD,CAAaC,QAAS,sB,UCzBxH,EAA6M,iCAA7M,EAAgQ,qCAAhQ,EAAgT,8B,UCInSK,EAAc,SAACZ,GACxB,OAIIa,EAAAA,EAAAA,MAHAtB,EADJ,EACIA,SACAuB,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,MAOJ,OAAO,kBAAMC,SAAUF,GALyB,SAAAG,GAC5CjB,EAAMkB,QAAQD,GACdF,OAG2ClB,UAAWC,EAAnD,WACH,gBAAKD,UAAWC,EAAhB,UACI,SAACR,EAAA,EAAD,CAAcI,GAAG,OACHF,KAAK,OACLC,MAAM,kBACNE,KAAM,EACNJ,SAAUA,EACVK,iBAAkB,CACduB,UAAU,QAIhC,0BACI,mBAAQtB,UAAWC,EAAnB,4BCvBNsB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WA6BD,OA7BCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,wBAAAA,MAEF,SAAsBC,EAAwCC,GAC1D,OAAOD,IAAcE,KAAKvB,OAASsB,IAAcC,KAAKC,QACzD,oBAED,WAAU,IAAD,EACL,EAAiDD,KAAKvB,MAA/CyB,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,KAAMR,EAA1B,EAA0BA,QAASP,EAAnC,EAAmCA,WAE7BgB,GAAqB,OAAXF,QAAW,IAAXA,GAAA,UAAAA,EAAaG,eAAb,eAAsBC,UAAWH,EAAKhC,GAEhDoC,EAAeL,EAAYM,MAAMC,KAAI,SAAAC,GAAI,eAAI,SAAC,EAAD,CAAoB5B,QAAS4B,EAAK5B,QAC5BH,MAAK,UAAEuB,EAAYG,eAAd,aAAE,EAAqBM,OAAOC,MACnC3C,KAAI,UAAEiC,EAAYG,eAAd,aAAE,EAAqBQ,SAC3BzB,WAAYA,EACZH,MAAOyB,EAAKzB,MACZd,GAAIuC,EAAKvC,IALJuC,EAAKvC,OAQnE,OACI,+BACI,iBAAKG,UAAWwC,EAAhB,UACKV,IAAW,SAACf,EAAD,CAAaM,QAASA,KAClC,gBAAKrB,UAAWwC,EAAhB,SACKP,aAKpB,EA7BCV,CAAgBkB,EAAAA,WAgCtB,I,SCvBaC,GAAmBC,EAAAA,EAAAA,KAPR,SAAChB,GACrB,MAAO,CACHC,YAAaD,EAAMC,YACnBC,KAAMF,EAAME,QAIqC,CAACR,QAAAA,EAAAA,GAASP,WAAAA,EAAAA,IAAnC6B,CAAgDpB,GCdhF,EAAmC,kCCAnC,EAAyM,6BAAzM,EAA6O,0BAA7O,EAA0R,sCAA1R,EAA2U,8B,UCK9TqB,EAA+B,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEpCC,EAAiB,WACnBD,EAAQ,SAGZ,OACI,iBAAK7C,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAACQ,EAAA,EAAD,CAAaC,QAAS,sBACtB,mGAGJ,iBAAKV,UAAWC,EAAhB,WACI,kCACA,0aAII,SAAC,KAAD,CAAS8C,GAAI,QAASnC,QAASkC,EAAgB9C,UAAWC,EAA1D,yBAEJ,ocAKI,SAAC,KAAD,CAAS8C,GAAI,QAASnC,QAASkC,EAAgB9C,UAAWC,EAA1D,yBAEJ,kgBAMI,SAAC,KAAD,CAAS8C,GAAI,QAASnC,QAASkC,EAAgB9C,UAAWC,EAA1D,+B,SCvCpB,EAAyN,mCAAzN,EAA0Z,gCAA1Z,EAAmc,8BCGtb+C,EAAsD,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,OAAQnB,EAA2B,EAA3BA,QAASoB,EAAkB,EAAlBA,aAElF,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAmCF,EAAAA,EAAAA,UAASF,GAA5C,eAAOK,EAAP,KAAsBC,EAAtB,KAMMC,EAAa,WACXJ,GACAK,IAEJJ,GAAWD,IAGTK,EAAS,WACXP,EAAaI,KAGjBI,EAAAA,EAAAA,YAAU,WACNH,EAAUN,KACX,CAACA,IAEJ,IAAMU,EAAoB7B,EAA4B7B,EAAlBA,EAEpC,OACI,8BACMmD,GAKE,kBAAOQ,OAAQJ,EAAYK,SA5BhB,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QA2BmCC,WAAS,EACvDD,MAAOV,EAAetD,UAAWC,KALxC,iBAAKiE,cAAeV,EAAYxD,UAAW2D,EAA3C,WACI,0BAAOL,GAAiB,cACvBxB,IAAW,SAACrB,EAAA,EAAD,CAAaC,QAAS,e,uCClCtD,EAA2M,6BAA3M,EAAsS,gCCG/R,SAASyD,EAAT,GAAiE,IAA7CzE,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,KAAMyE,EAA4B,EAA5BA,KAAMxE,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,GAAe,EAAXwE,WAEpD1E,EAAI,mBAAeA,IAGvB,IAAM2E,EAAyB,UAATF,EAAmBnE,EAAmBA,EAC5D,OAAO,iCACH,kBAAOsE,QAAS5E,EAAhB,UAAsB,0BAAKC,EAAL,UACtB,0BACII,UAAWsE,EACXzE,GAAIA,EACJF,KAAMA,EACNyE,KAAMA,EACNlE,YAAaN,GACTF,EAASC,QCXlB,IAAM6E,EAAkB,SAAC,GAA8E,IAA7EzC,EAA4E,EAA5EA,QAASD,EAAmE,EAAnEA,QAAS2C,EAA0D,EAA1DA,kBAAmBC,EAAuC,EAAvCA,YAClE,GAAiC1D,EAAAA,EAAAA,IAAQ,CACrC2D,eAAc,UAAK5C,KADhBrC,EAAP,EAAOA,SAAUuB,EAAjB,EAAiBA,aAIXE,EAAQ,mCAAG,WAAOC,GAAP,iEACbsD,EAAYtD,GADC,2CAAH,sDAId,OAAO,0BACH,kBAAMD,SAAUF,EAAaE,GAAWnB,UAAWC,EAAAA,EAAAA,uBAAnD,UACKwE,IAAqB,gBAAKzE,UAAWC,EAAAA,EAAAA,kBAAhB,SAA2CwE,IAChE3C,IAAW,gBAAK9B,UAAWC,EAAAA,EAAAA,YAAhB,UACR,mBAAQD,UAAWC,EAAAA,EAAAA,WACXmE,KAAK,SADb,qBAIJ,0BACI,SAACD,EAAD,CAAWtE,GAAG,WACHuE,KAAK,QACLzE,KAAK,WACLC,MAAM,YACNF,SAAUA,EACV2E,UAAU,OAGzB,4BACI,sCACA,SAAC5E,EAAA,EAAD,CAAcI,GAAG,UACHF,KAAK,WACLC,MAAM,0BACNE,KAAM,EACNC,iBAAkB,GAClBL,SAAUA,QAE5B,0BACI,SAACyE,EAAD,CAAWtE,GAAG,iBACHuE,KAAK,WACLzE,KAAK,iBACLC,MAAM,oBACNF,SAAUA,EACV2E,UAAU,OAIzB,4BACI,2DACA,SAAC5E,EAAA,EAAD,CAAcI,GAAG,4BACHF,KAAK,4BACLC,MAAM,gDACNE,KAAM,EACNC,iBAAkB,GAClBL,SAAUA,QAG5B,yBACKkF,OAAOC,KAAK9C,EAAQ+C,UAAU3C,KAAI,SAAA4C,GAE/B,OAAO,gBAAmB/E,UAAWC,EAAAA,EAAAA,YAA9B,UACH,SAACkE,EAAD,CAAWtE,GAAIkF,EACJX,KAAK,QACLzE,KAAMoF,EACNnF,MAAOmF,EACPV,UAAU,EACV3E,SAAUA,KANRqF,c,UC9DxBC,EAAU,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,aACnC,OACI,iBAAKlF,UAAWC,EAAAA,EAAAA,QAAhB,WACI,uBAAIgF,IADR,KAC4BC,MCDvBC,GAAc,SAAC,GAAqD,IAApDpD,EAAmD,EAAnDA,QAASD,EAA0C,EAA1CA,QAASuB,EAAiC,EAAjCA,UAErC+B,EAAsBrD,EAAQsD,eAAiB,MAAQ,KACvDC,EAAevD,EAAQsD,eAAiB,MAAQ,KAChDE,EAAiCxD,EAAQyD,0BAA4BzD,EAAQyD,0BAA4B,MAEzGV,EAAWF,OAAOC,KAAK9C,EAAQ+C,UAAU3C,KAAI,SAAC4C,GAEhD,GADsBhD,EAAQ+C,SAASC,GAEnC,OAAO,SAACC,EAAD,CAAuBC,aAAcF,EAASG,aAAcnD,EAAQ+C,SAASC,IAA/DA,MAI7B,OAAO,iBAAK/E,UAAWC,EAAAA,EAAAA,qBAAhB,UACFwF,QAAQ3D,KAAY,gBAAK9B,UAAWC,EAAAA,EAAAA,eAAhB,UACjB,mBAAQW,QAAS,kBAAMyC,GAAU,IAAOrD,UAAWC,EAAAA,EAAAA,cAAnD,0BAEJ,iBAAKD,UAAWC,EAAAA,EAAAA,QAAhB,WACI,uCAAkB,0BAAOqF,QAE7B,4BACI,6CADJ,KAC+BF,MAE/B,4BAAK,yDAAL,KACsBG,MAEtB,yBAAMT,Q,WCpBDY,GAA2D,SAACvF,GAAW,IAAD,EAE3EiD,EAcAjD,EAdAiD,OACAC,EAaAlD,EAbAkD,UACAtB,EAYA5B,EAZA4B,QACAkB,EAWA9C,EAXA8C,OACAC,EAUA/C,EAVA+C,aACApB,EASA3B,EATA2B,QACA6D,EAQAxF,EARAwF,UACAlB,EAOAtE,EAPAsE,kBACAC,EAMAvE,EANAuE,YACAkB,EAKAzF,EALAyF,oBACAC,EAIA1F,EAJA0F,OACAC,EAGA3F,EAHA2F,SACAC,EAEA5F,EAFA4F,MACA/D,EACA7B,EADA6B,OAGEgE,GAAWC,EAAAA,EAAAA,QAAyB,MAa1C,IAAKlE,EACD,OAAO,SAACmE,EAAA,EAAD,IAGX,IAAIC,EAAOJ,EAAMK,MAAK,SAAAD,GAAI,OAAIA,EAAKtG,MAAQmC,KAc3C,OAbKmE,IACDA,EAAO,CACHtG,GAAI,EACJF,KAAM,GACNsD,OAAQ,GACRZ,OAAQ,CACJC,MAAO,GACP+D,MAAO,IAEXC,UAAU,KAKd,iBAAKtG,UAAWC,EAAAA,EAAAA,qBAAhB,WACI,iBAAKD,UAAWC,EAAAA,EAAAA,eAAhB,WACI,gBAAKG,IAAY,OAAP2B,QAAO,IAAPA,GAAA,UAAAA,EAASM,cAAT,SAAiBgE,MAAQtE,EAAQM,OAAOgE,MAAQ/F,EAAWC,IAAK,QACrEP,UAAWC,EAAAA,EAAAA,eAEfwF,QAAQ3D,KAAY,4BACjB,mBAAQlB,QApCE,WAAO,IAAD,EAC5BoF,IAAQ,UAAIA,EAASO,eAAb,OAAI,EAAkBC,UAmCkBxG,UAAWC,EAAAA,EAAAA,YAA/C,UAAmE,SAACQ,EAAA,EAAD,CAAaC,QAAS,aAEzF,kBACI+F,MAAO,CAACC,QAAS,QACjBC,IAAKX,EACL5B,KAAK,OACLP,SAtCE,SAACC,GACnB,GAAIA,EAAE8C,OAAOC,OAAS/C,EAAE8C,OAAOC,MAAMC,OAAQ,CACzC,IAAMC,EAAOjD,EAAE8C,OAAOC,MAAM,GAC5BlB,EAAUoB,WAuCN,+BAAKhF,QAAL,IAAKA,OAAL,EAAKA,EAASQ,YACd,SAACS,EAAD,CAAwBlB,QAASA,EAASmB,OAAQA,EAAQC,aAAcA,KACtEpB,IACE,gBAAK9B,UAAWC,EAAAA,EAAAA,gBAAhB,UACI,SAAC+G,GAAA,EAAD,CAAcpB,oBAAqBA,EAAqBC,OAAQA,EAClDC,SAAUA,EACVK,KAAMA,UAGhC,gBAAKnG,UAAWC,EAAAA,EAAAA,uBAAhB,SAAgDmD,GAC5C,SAACoB,EAAD,CAAiBE,YAAaA,EAAaD,kBAAmBA,EAAmB1C,QAASA,EACzED,QAASA,EAASuB,UAAWA,KAC9C,SAAC8B,GAAD,CAAapD,QAASA,EAASD,QAASA,EAASuB,UAAWA,UChF/D4D,GAAsC,SAAC9G,GAChD,OACI,iBAAKH,UAAWC,EAAhB,WACI,SAACyF,GAAD,CAAarC,UAAWlD,EAAMkD,UAAWD,OAAQjD,EAAMiD,OAAQsB,YAAavE,EAAMuE,YACrED,kBAAmBtE,EAAMsE,kBAAmBkB,UAAWxF,EAAMwF,UAAW7D,QAAS3B,EAAM2B,QACvFC,QAAS5B,EAAM4B,QAASkB,OAAQ9C,EAAM8C,OAAQC,aAAc/C,EAAM+C,aAClE0C,oBAAqBzF,EAAMyF,oBAC3BC,OAAQ1F,EAAM0F,OAAQC,SAAU3F,EAAM2F,SAAUC,MAAO5F,EAAM4F,MAAO/D,OAAQ7B,EAAM6B,UAE/F,SAACU,EAAD,KACA,SAACE,EAAD,CAAaC,QAAS1C,EAAM0C,c,uDCP3BqE,GAAb,kJAEI,WACI,IAAIlF,EAASN,KAAKvB,MAAMgH,MAAMC,OAAOpF,OAChCA,IACDA,EAASN,KAAKvB,MAAMkH,UAAWC,aAE3B5F,KAAKvB,MAAMoH,QAAQC,KAAK,SAIhC9F,KAAKvB,MAAMsH,WAAWzF,GACtBN,KAAKvB,MAAMuH,UAAU1F,KAZ7B,+BAgBI,WACIN,KAAKiG,mBAjBb,gCAoBI,SAAmBC,EAAgCC,EAAyBC,GACpEpG,KAAKvB,MAAMgH,MAAMC,OAAOpF,QAAU4F,EAAUT,MAAMC,OAAOpF,QACzDN,KAAKiG,mBAtBjB,oBA0BI,WACI,OAAO,SAACV,IAAD,gBAASnF,SAAUJ,KAAKvB,MAAMgH,MAAMC,OAAOpF,OAClCA,OAAQN,KAAKvB,MAAMgH,MAAMC,OAAOpF,QAC5BN,KAAKvB,OAFlB,IAGS4B,QAASL,KAAKvB,MAAM4B,QACpBkB,OAAQvB,KAAKvB,MAAM8C,OACnB0C,UAAWjE,KAAKvB,MAAMwF,UACtBzC,aAAcxB,KAAKvB,MAAM+C,aACzBuB,kBAAmB/C,KAAKvB,MAAMsE,kBAC9BC,YAAahD,KAAKvB,MAAMuE,YACxBtB,OAAQ1B,KAAKvB,MAAMiD,OACnBC,UAAW3B,KAAKvB,MAAMkD,UACtBR,QAASnB,KAAKvB,MAAM0C,QACpB+C,oBAAqBlE,KAAKvB,MAAMyF,oBAChCC,OAAQnE,KAAKvB,MAAM0F,OACnBC,SAAUpE,KAAKvB,MAAM2F,SACrBC,MAAOrE,KAAKvB,MAAM4F,aA1C1C,GAAyCtD,EAAAA,WAwGzC,IA9CyBsF,EAAAA,GAAAA,KACrBpF,EAAAA,EAAAA,KAZoB,SAAChB,GAAD,MAA+C,CACnEI,QAASJ,EAAMC,YAAYG,QAC3BkB,OAAQtB,EAAMC,YAAYqB,OAC1BoE,UAAW1F,EAAME,KAAKhC,GACtB4E,kBAAmB9C,EAAMC,YAAY6C,kBACrCrB,OAAQzB,EAAMC,YAAYwB,OAC1B4E,aAAcrG,EAAMsG,IAAID,aACxBpC,oBAAqBjE,EAAMuG,UAAUtC,oBACrCG,MAAOpE,EAAMuG,UAAUnC,SAIE,CACrB0B,WAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAxE,aAAAA,EAAAA,GACAyC,UAAAA,EAAAA,GACAjB,YAAAA,EAAAA,GACArB,UAAAA,EAAAA,GACAR,QAAAA,GAAAA,GACAgD,OAAAA,GAAAA,GACAC,SAAAA,GAAAA,KAEJqC,GAAAA,GAAYC,GAAAA,EAZSL,CAYSb","sources":["webpack://samurai-way/./src/common/components/FormTextarea/FormTextarea.module.scss?640e","common/components/FormTextarea/FormTextarea.tsx","webpack://samurai-way/./src/features/Profile/MyPosts/MyPosts.module.scss?8dcb","webpack://samurai-way/./src/features/Profile/MyPosts/Post/Post.module.scss?3e38","features/Profile/MyPosts/Post/Post.tsx","webpack://samurai-way/./src/features/Profile/MyPosts/Post/AddPostForm.module.scss?91a1","features/Profile/MyPosts/Post/AddPostForm.tsx","features/Profile/MyPosts/MyPosts.tsx","features/Profile/MyPosts/MyPostsContainer.tsx","webpack://samurai-way/./src/features/Profile/Profile.module.scss?d926","webpack://samurai-way/./src/features/Profile/NewsSection/NewsSection.module.scss?9dba","features/Profile/NewsSection/NewsSection.tsx","webpack://samurai-way/./src/features/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss?56e3","features/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","webpack://samurai-way/./src/common/components/FormInput/FormInput.module.scss?ac83","common/components/FormInput/FormInput.tsx","features/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","features/Profile/ProfileInfo/Contact/Contact.tsx","features/Profile/ProfileInfo/ProfileData/ProfileData.tsx","features/Profile/ProfileInfo/ProfileInfo.tsx","features/Profile/Profile.tsx","features/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormTextarea_smallUserPhoto__opv+K\",\"inputTextareaBasicLayout\":\"FormTextarea_inputTextareaBasicLayout__iuLLm\",\"formTextareaStyles\":\"FormTextarea_formTextareaStyles__M0aZc\",\"styleTextarea\":\"FormTextarea_styleTextarea__v81HR\",\"formInputStyles\":\"FormTextarea_formInputStyles__EQByh\",\"formInput\":\"FormTextarea_formInput__+3e8k\",\"blocksBorder\":\"FormTextarea_blocksBorder__CdW9S\",\"formCheckBox\":\"FormTextarea_formCheckBox__Jf8ad\"};","import React from 'react';\r\nimport styles from './FormTextarea.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormTextarea({register, name, label, id, rows, validationSchema}) {\r\n\r\n    return <>\r\n        <textarea\r\n            className={styles.styleTextarea}\r\n            id={id}\r\n            name={name}\r\n            placeholder={label}\r\n            rows={rows}\r\n            {...register(name, validationSchema)}\r\n        />\r\n    </>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__eN-CI\",\"posts\":\"MyPosts_posts__XAzL6\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"Post_smallUserPhoto__LIZl7\",\"inputTextareaBasicLayout\":\"Post_inputTextareaBasicLayout__VR29L\",\"blocksBorder\":\"Post_blocksBorder__I3Pop\",\"item\":\"Post_item__dVMd0\",\"nameBox\":\"Post_nameBox__v7EAf\",\"postMessage\":\"Post_postMessage__C7rxq\",\"postFooter\":\"Post_postFooter__pGt7P\",\"likes\":\"Post_likes__njxFs\",\"delete\":\"Post_delete__zeace\",\"postForm\":\"Post_postForm__heJOv\"};","import React from 'react';\r\nimport styles from './Post.module.scss'\r\nimport {PostType} from \"../../profile-reducer\";\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\nimport {SvgSelector} from \"../../../../common/components/svgSelector/SvgSelector\";\r\n\r\n\r\nconst Post: React.FC<MyPostPropsType> = (props) => {\r\n\r\n    const postDeleteHandler = (postId: string) => {\r\n        props.deletePost(postId)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.item}>\r\n                <div className={styles.nameBox}>\r\n                    <img src={props.image || userPhoto} alt=\"ava\"/>\r\n                    <h3>{props.name}</h3>\r\n                </div>\r\n                <div className={styles.postMessage}>{props.message}</div>\r\n                <div className={styles.postFooter}>\r\n                    <div className={styles.likes}>\r\n                        <SvgSelector svgname={'likes'}/>\r\n                        <span>{props.likes}</span>\r\n                    </div>\r\n                    <button className={styles.delete} onClick={() => postDeleteHandler(props.id)}><SvgSelector svgname={'delete'}/></button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n\r\ntype MyPostPropsType = PostType & { deletePost: (postId: string) => void }","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"AddPostForm_smallUserPhoto__GARzJ\",\"inputTextareaBasicLayout\":\"AddPostForm_inputTextareaBasicLayout__Ct52d\",\"blocksBorder\":\"AddPostForm_blocksBorder__qvc8-\",\"addPostForm\":\"AddPostForm_addPostForm__3nxva\",\"messageTextarea\":\"AddPostForm_messageTextarea__1ZFkv\",\"sendPost\":\"AddPostForm_sendPost__CQJQP\"};","import {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport styles from './AddPostForm.module.scss'\r\nimport {FormTextarea} from \"../../../../common/components/FormTextarea/FormTextarea\";\r\n\r\nexport const AddPostForm = (props: AddPostFormType) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset\r\n    } = useForm<IPostFormInput>();\r\n    const onSubmit: SubmitHandler<IPostFormInput> = data => {\r\n        props.addPost(data)\r\n        reset()\r\n\r\n    };\r\n    return <form onSubmit={handleSubmit(onSubmit)} className={styles.addPostForm}>\r\n        <div className={styles.messageTextarea}>\r\n            <FormTextarea id=\"post\"\r\n                          name=\"post\"\r\n                          label=\"Write a post...\"\r\n                          rows={3}\r\n                          register={register}\r\n                          validationSchema={{\r\n                              required: true\r\n                          }}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className={styles.sendPost}>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport type IPostFormInput = {\r\n    post: string\r\n}\r\n\r\ntype AddPostFormType = {\r\n    addPost: (post: IPostFormInput) => void\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.scss'\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsCommonType} from \"./MyPostsContainer\";\r\nimport {AddPostForm} from \"./Post/AddPostForm\";\r\n\r\nclass MyPosts extends React.Component<MyPostsCommonType> {\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<MyPostsCommonType>, nextState: Readonly<{}>): boolean {\r\n        return nextProps !== this.props || nextState !== this.state\r\n    }\r\n\r\n    render() {\r\n        const {profilePage, auth, addPost, deletePost} = this.props\r\n\r\n        const isOwner = profilePage?.profile?.userId === auth.id\r\n\r\n        const postElements = profilePage.posts.map(post => <Post key={post.id} message={post.message}\r\n                                                                 image={profilePage.profile?.photos.small}\r\n                                                                 name={profilePage.profile?.fullName}\r\n                                                                 deletePost={deletePost}\r\n                                                                 likes={post.likes}\r\n                                                                 id={post.id}\r\n        />)\r\n\r\n        return (\r\n            <>\r\n                <div className={s.postsBlock}>\r\n                    {isOwner && <AddPostForm addPost={addPost}/>}\r\n                    <div className={s.posts}>\r\n                        {postElements}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","import React from 'react';\r\nimport {addPost, deletePost, ProfileStateType} from \"../profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../app/redux-store\";\r\nimport {IPostFormInput} from \"./Post/AddPostForm\";\r\nimport {AuthStateType} from \"../../Login/auth-reducer\";\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPost, deletePost})(MyPosts)\r\n\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileStateType\r\n    auth: AuthStateType\r\n}\r\n\r\ntype mapDispatchToProps = {\r\n    addPost: (post: IPostFormInput) => void\r\n    deletePost: (postId: string) => void\r\n}\r\n\r\nexport  type MyPostsCommonType = mapDispatchToProps & mapStateToPropsType\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__YAFxS\",\"content__img\":\"Profile_content__img__J83xr\"};","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"NewsSection_smallUserPhoto__waU46\",\"inputTextareaBasicLayout\":\"NewsSection_inputTextareaBasicLayout__wqiQK\",\"blocksBorder\":\"NewsSection_blocksBorder__J6g7E\",\"section\":\"NewsSection_section__ImZ6m\",\"news\":\"NewsSection_news__sn1t9\",\"underDevelopment\":\"NewsSection_underDevelopment__V3Y3f\",\"newsLink\":\"NewsSection_newsLink__LAG3V\"};","import React from 'react';\r\nimport styles from './NewsSection.module.scss'\r\nimport {SvgSelector} from \"../../../common/components/svgSelector/SvgSelector\";\r\nimport {AppPage} from \"../../../app/app-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const NewsSection: React.FC<Props> = ({setPage}) => {\r\n\r\n    const onClickHandler = () => {\r\n        setPage('news')\r\n    }\r\n\r\n    return (\r\n        <div className={styles.section}>\r\n            <div className={styles.underDevelopment}>\r\n                <SvgSelector svgname={'underDevelopment'}/>\r\n                <p>The project is under development. Some features may be unavailable.</p>\r\n\r\n            </div>\r\n            <div className={styles.news}>\r\n                <h3>News</h3>\r\n                <div>NASA has shared a stunning picture of Enceladus, the sixth-largest moon of Saturn known to harbor\r\n                    oceans beneath its frozen crust. In the color-enhanced image, snapped by the Cassini spacecraft,\r\n                    pale blue fractures—possibly rivers—cut through the surface of the moon and deep craters have also\r\n                    been spotted. The planet is not completely visible since it's obscured by the moon's shadow\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>...more</NavLink>\r\n                </div>\r\n                <div>American tech giant Apple has acknowledged a display bug in its iPhone 14 Pro smartphone after a\r\n                    growing number of users reported a strange display issue when booting up or unlocking their devices.\r\n                    According to GSM Arena, a tech-news-related website, green and yellow horizontal lines appear on the\r\n                    screen that disappears later on during the startup process, so it's not damaging the user experience\r\n                    completely, if at all\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>...more</NavLink>\r\n                </div>\r\n                <div>\r\n                    Scientists have reported the first evidence of the presence of solitary waves or distinct electric\r\n                    field fluctuations in the Mars' magnetosphere. The study of these waves is crucial as they directly\r\n                    control particle energisation, plasma loss, transport etc. through wave-particle interactions.\r\n                    According to the Ministry of Science and Technology, Earth is a giant magnet, and its magnetic field\r\n                    protects us from high-speed charged particles that are continuously emitted from the Sun\r\n                    <NavLink to={'/news'} onClick={onClickHandler} className={styles.newsLink}>...more</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype Props = {\r\n    setPage: (page: AppPage) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"ProfileStatus_smallUserPhoto__lCFlO\",\"inputTextareaBasicLayout\":\"ProfileStatus_inputTextareaBasicLayout__Kp0pL\",\"formInputStyles\":\"ProfileStatus_formInputStyles__jtI3Q\",\"statusInput\":\"ProfileStatus_statusInput__x41dP\",\"formInput\":\"ProfileStatus_formInput__BQi-v\",\"blocksBorder\":\"ProfileStatus_blocksBorder__7NZPo\",\"formCheckBox\":\"ProfileStatus_formCheckBox__XKsvA\",\"disabled\":\"ProfileStatus_disabled__j7Mm0\",\"status\":\"ProfileStatus_status__dgmM8\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport styles from './ProfileStatus.module.scss'\r\nimport {SvgSelector} from \"../../../../common/components/svgSelector/SvgSelector\";\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusType> = ({status, isOwner, updateStatus}) => {\r\n\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [ProfileStatus, setStatus] = useState(status)\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        if (isEdit) {\r\n            update()\r\n        }\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    const update = () => {\r\n        updateStatus(ProfileStatus)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [status])\r\n\r\n    const isEditFalseStyle = !isOwner ? styles.disabled : styles.status\r\n\r\n    return (\r\n        <>\r\n            {!isEdit ?\r\n                <div onDoubleClick={toggleMode} className={isEditFalseStyle}>\r\n                    <span>{ProfileStatus || 'no status'}</span>\r\n                    {isOwner && <SvgSelector svgname={'edit'}/>}\r\n                </div> :\r\n                <input onBlur={toggleMode} onChange={onStatusChange} autoFocus\r\n                       value={ProfileStatus} className={styles.statusInput}/>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"smallUserPhoto\":\"FormInput_smallUserPhoto__V8krH\",\"inputTextareaBasicLayout\":\"FormInput_inputTextareaBasicLayout__3ySUE\",\"formInputStyles\":\"FormInput_formInputStyles__MtNLW\",\"formInput\":\"FormInput_formInput__m4yQV\",\"blocksBorder\":\"FormInput_blocksBorder__5QhOQ\",\"formCheckBox\":\"FormInput_formCheckBox__4D+M0\"};","import React from 'react';\r\nimport styles from './FormInput.module.scss'\r\n\r\n// @ts-ignore\r\nexport function FormInput({register, name, type, label, id, isNested}) {\r\n    if (isNested) {\r\n        name = `contacts.${name}`\r\n    }\r\n\r\n    const styleForInput = type === 'input' ? styles.formInput : styles.formCheckBox\r\n    return <>\r\n        <label htmlFor={name}><h3>{label}:</h3></label>\r\n        <input\r\n            className={styleForInput}\r\n            id={id}\r\n            name={name}\r\n            type={type}\r\n            placeholder={label}\r\n            {...register(name)}\r\n        />\r\n    </>\r\n}\r\n\r\n","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {ProfileType} from \"../../../../api/api\";\r\nimport styles from \"../ProfileInfo.module.scss\"\r\nimport {FormInput} from \"../../../../common/components/FormInput/FormInput\";\r\nimport {FormTextarea} from \"../../../../common/components/FormTextarea/FormTextarea\";\r\n\r\nexport const ProfileDataForm = ({profile, isOwner, profileEditStatus, saveProfile}: ProfileDataFormProps) => {\r\n    const {register, handleSubmit} = useForm({\r\n        defaultValues: {...profile}\r\n    })\r\n\r\n    const onSubmit = async (data: any) => {\r\n        saveProfile(data)\r\n    }\r\n\r\n    return <div>\r\n        <form onSubmit={handleSubmit(onSubmit)} className={styles.editProfileInformation}>\r\n            {profileEditStatus && <div className={styles.profileEditStatus}>{profileEditStatus}</div>}\r\n            {isOwner && <div className={styles.saveButtons}>\r\n                <button className={styles.saveButton}\r\n                        type=\"submit\">Save\r\n                </button>\r\n            </div>}\r\n            <div>\r\n                <FormInput id=\"fullName\"\r\n                           type=\"input\"\r\n                           name=\"fullName\"\r\n                           label=\"Full name\"\r\n                           register={register}\r\n                           isNested={false}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h3>About me</h3>\r\n                <FormTextarea id=\"aboutMe\"\r\n                              name=\"fullName\"\r\n                              label=\"Write about yourself...\"\r\n                              rows={3}\r\n                              validationSchema={{}}\r\n                              register={register}/>\r\n            </div>\r\n            <div>\r\n                <FormInput id=\"lookingForAJob\"\r\n                           type=\"checkbox\"\r\n                           name=\"lookingForAJob\"\r\n                           label=\"Looking for a job\"\r\n                           register={register}\r\n                           isNested={false}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Looking for a job description</h3>\r\n                <FormTextarea id=\"lookingForAJobDescription\"\r\n                              name=\"lookingForAJobDescription\"\r\n                              label=\"Write about a job which you're looking for...\"\r\n                              rows={3}\r\n                              validationSchema={{}}\r\n                              register={register}\r\n                />\r\n            </div>\r\n            <div>\r\n                {Object.keys(profile.contacts).map(contact => {\r\n\r\n                    return <div key={contact} className={styles.contactForm}>\r\n                        <FormInput id={contact}\r\n                                   type=\"input\"\r\n                                   name={contact}\r\n                                   label={contact}\r\n                                   isNested={true}\r\n                                   register={register}\r\n                        />\r\n\r\n                    </div>\r\n                })}</div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\ntype ProfileDataFormProps = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    setIsEdit: (boolean: boolean) => void\r\n    profileEditStatus: string | null\r\n    saveProfile: (profile: any) => void\r\n}","import styles from \"../ProfileInfo.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport const Contact = ({contactTitle, contactValue}: ContactProps) => {\r\n    return (\r\n        <div className={styles.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ContactProps = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}","import styles from \"../ProfileInfo.module.scss\";\r\nimport React from \"react\";\r\nimport {ProfileType} from \"../../../../api/api\";\r\nimport {Contact} from \"../Contact/Contact\";\r\n\r\nexport const ProfileData = ({profile, isOwner, setIsEdit}: ProfileDataProps) => {\r\n\r\n    const lookingForAJobField = profile.lookingForAJob ? 'yes' : 'no'\r\n    const aboutMeField = profile.lookingForAJob ? 'yes' : 'no'\r\n    const lookingForAJobDescriptionField = profile.lookingForAJobDescription ? profile.lookingForAJobDescription : '...'\r\n\r\n    const contacts = Object.keys(profile.contacts).map((contact) => {\r\n        const contactsValue = profile.contacts[contact]\r\n        if (contactsValue) {\r\n            return <Contact key={contact} contactTitle={contact} contactValue={profile.contacts[contact]}/>\r\n        }\r\n    })\r\n\r\n    return <div className={styles.profileDataContainer}>\r\n        {Boolean(isOwner) && <div className={styles.settingButtons}>\r\n            <button onClick={() => setIsEdit(true)} className={styles.settingButton}> Settings</button>\r\n        </div>}\r\n        <div className={styles.aboutMe}>\r\n            <h3>About me:</h3><span>{aboutMeField}</span>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {lookingForAJobField}\r\n        </div>\r\n        <div><b>Looking for a job\r\n            description</b>: {lookingForAJobDescriptionField}\r\n        </div>\r\n        <div>{contacts}</div>\r\n    </div>\r\n}\r\n\r\nexport type ProfileDataProps = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    setIsEdit: (boolean: boolean) => void\r\n}","import React, {ChangeEvent, useRef} from 'react';\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport {ProfilePropsType} from \"../Profile\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport {ProfileDataForm} from \"./ProfileDataForm/ProfileDataForm\";\r\nimport Preloader from \"../../../common/components/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {SvgSelector} from \"../../../common/components/svgSelector/SvgSelector\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport {InteractUser} from \"./InteractUser/InteractUser\";\r\n\r\nexport const ProfileInfo: React.FC<Omit<ProfilePropsType, 'setPage'>> = (props) => {\r\n    const {\r\n        isEdit,\r\n        setIsEdit,\r\n        profile,\r\n        status,\r\n        updateStatus,\r\n        isOwner,\r\n        savePhoto,\r\n        profileEditStatus,\r\n        saveProfile,\r\n        followingInProgress,\r\n        follow,\r\n        unFollow,\r\n        users,\r\n        userId\r\n    } = props\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const selectFileHandler = () => {\r\n        inputRef && inputRef.current?.click();\r\n    };\r\n\r\n    const uploadHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            const file = e.target.files[0]\r\n            savePhoto(file)\r\n        }\r\n    }\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let user = users.find(user => user.id === +userId)\r\n    if (!user) {\r\n        user = {\r\n            id: 0,\r\n            name: '',\r\n            status: '',\r\n            photos: {\r\n                small: '',\r\n                large: '',\r\n            },\r\n            followed: false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profileInfoContainer}>\r\n            <div className={styles.mainProfileBox}>\r\n                <img src={profile?.photos?.large ? profile.photos.large : userPhoto} alt={'photo'}\r\n                     className={styles.profilePhoto}/>\r\n\r\n                {Boolean(isOwner) && <div>\r\n                    <button onClick={selectFileHandler} className={styles.uploadImage}><SvgSelector svgname={'photo'}/>\r\n                    </button>\r\n                    <input\r\n                        style={{display: 'none'}}\r\n                        ref={inputRef}\r\n                        type=\"file\"\r\n                        onChange={uploadHandler}\r\n                    />\r\n                </div>}\r\n\r\n                <h2>{profile?.fullName}</h2>\r\n                <ProfileStatusWithHooks isOwner={isOwner} status={status} updateStatus={updateStatus}/>\r\n                {!isOwner &&\r\n                    <div className={styles.interactProfile}>\r\n                        <InteractUser followingInProgress={followingInProgress} follow={follow}\r\n                                      unFollow={unFollow}\r\n                                      user={user}/>\r\n                    </div>}\r\n            </div>\r\n            <div className={styles.restProfileInformation}>{isEdit ?\r\n                <ProfileDataForm saveProfile={saveProfile} profileEditStatus={profileEditStatus} profile={profile}\r\n                                 isOwner={isOwner} setIsEdit={setIsEdit}/> :\r\n                <ProfileData profile={profile} isOwner={isOwner} setIsEdit={setIsEdit}/>}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport styles from './Profile.module.scss'\r\nimport {NewsSection} from \"./NewsSection/NewsSection\";\r\nimport {AppPage} from \"../../app/app-reducer\";\r\nimport {UserType} from \"../Users/users-reducer\";\r\nimport {ProfileType} from \"../../api/api\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <div className={styles.profileContainer}>\r\n            <ProfileInfo setIsEdit={props.setIsEdit} isEdit={props.isEdit} saveProfile={props.saveProfile}\r\n                         profileEditStatus={props.profileEditStatus} savePhoto={props.savePhoto} isOwner={props.isOwner}\r\n                         profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n                         followingInProgress={props.followingInProgress}\r\n                         follow={props.follow} unFollow={props.unFollow} users={props.users} userId={props.userId}\r\n            />\r\n            <MyPostsContainer/>\r\n            <NewsSection setPage={props.setPage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type ProfilePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    profileEditStatus: string | null\r\n    isEdit: boolean\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: any) => void\r\n    setIsEdit: (isEdit: boolean) => void\r\n    setPage: (page: AppPage) => void\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    users: UserType[]\r\n    userId: string\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfile, setIsEdit, updateStatus} from \"./profile-reducer\";\r\nimport {AppStateType} from \"../../app/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {ProfileType} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../common/hoc/withAuthRedirect\";\r\nimport {AppPage, setPage} from \"../../app/app-reducer\";\r\nimport {follow, unFollow, UserType} from \"../Users/users-reducer\";\r\n\r\nexport class ProfileAPIComponent extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.profileId!.toString()\r\n            if (!userId) {\r\n                this.props.history.push('login')\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile isOwner={!this.props.match.params.userId}\r\n                        userId={this.props.match.params.userId}\r\n                        {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        savePhoto={this.props.savePhoto}\r\n                        updateStatus={this.props.updateStatus}\r\n                        profileEditStatus={this.props.profileEditStatus}\r\n                        saveProfile={this.props.saveProfile}\r\n                        isEdit={this.props.isEdit}\r\n                        setIsEdit={this.props.setIsEdit}\r\n                        setPage={this.props.setPage}\r\n                        followingInProgress={this.props.followingInProgress}\r\n                        follow={this.props.follow}\r\n                        unFollow={this.props.unFollow}\r\n                        users={this.props.users}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    profileId: state.auth.id,\r\n    profileEditStatus: state.profilePage.profileEditStatus,\r\n    isEdit: state.profilePage.isEdit,\r\n    selectedPage: state.app.selectedPage,\r\n    followingInProgress: state.usersPage.followingInProgress,\r\n    users: state.usersPage.users\r\n})\r\n\r\nconst ProfileContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n        setIsEdit,\r\n        setPage,\r\n        follow,\r\n        unFollow\r\n    }),\r\n    withRouter, withAuthRedirect)(ProfileAPIComponent)\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: any) => void\r\n    setIsEdit: (isEdit: boolean) => void\r\n    setPage: (page: AppPage) => void\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    profileId: number | null\r\n    profileEditStatus: string | null\r\n    isEdit: boolean\r\n    selectedPage: AppPage\r\n    followingInProgress: number[]\r\n    users: UserType[]\r\n}\r\n\r\ntype OwnPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nexport default ProfileContainer"],"names":["FormTextarea","register","name","label","id","rows","validationSchema","className","styles","placeholder","props","src","image","userPhoto","alt","message","SvgSelector","svgname","likes","onClick","postId","deletePost","AddPostForm","useForm","handleSubmit","reset","onSubmit","data","addPost","required","MyPosts","nextProps","nextState","this","state","profilePage","auth","isOwner","profile","userId","postElements","posts","map","post","photos","small","fullName","s","React","MyPostsContainer","connect","NewsSection","setPage","onClickHandler","to","ProfileStatusWithHooks","status","updateStatus","useState","isEdit","setIsEdit","ProfileStatus","setStatus","toggleMode","update","useEffect","isEditFalseStyle","onBlur","onChange","e","currentTarget","value","autoFocus","onDoubleClick","FormInput","type","isNested","styleForInput","htmlFor","ProfileDataForm","profileEditStatus","saveProfile","defaultValues","Object","keys","contacts","contact","Contact","contactTitle","contactValue","ProfileData","lookingForAJobField","lookingForAJob","aboutMeField","lookingForAJobDescriptionField","lookingForAJobDescription","Boolean","ProfileInfo","savePhoto","followingInProgress","follow","unFollow","users","inputRef","useRef","Preloader","user","find","large","followed","current","click","style","display","ref","target","files","length","file","InteractUser","Profile","ProfileAPIComponent","match","params","profileId","toString","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","selectedPage","app","usersPage","withRouter","withAuthRedirect"],"sourceRoot":""}